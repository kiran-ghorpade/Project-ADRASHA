<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGAAAABgCAYAAADimHc4AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAACxIAAAsSAdLdfvwAAAOHSURBVHhe7Z29bhNRFITT8AqkogabxDYRUEANIgoieZSU
        YFuCAgQS6Sj5ETUy4iUQaQmOTQIFEDvuQCJU0Fx2zdnIbMY3tlntHc6eT/q6rDRzJ7Ecr1aeMwzDMAzD
        MAzDMAxjUlb77tTavmtFHqwNnGPwwpNPryWebuLDXx24r+gQQlpqvivGCMPffHAAoS1HAxRiBKaXnVHL
        jXYxRkDlGTwbDzA6wtPPmxJZF6g8g/EAhRgBlWcwGUD9CKg8gwsjA6geAZVncKGxXYwRUHkG/wxQgBFQ
        eQYX68kAykdA5RmMByjECKg8g8kA6kdA5Rms1DvFGAGVZzAeoBAjoPIMJgOoHwGVZ7A6MoDqEVB5Bqu3
        OsUYAZVn8NztnUxGuPj8C/dH2ag8g5ce96IBuvpHQOUZXOn+dEt3dvWPgMqzeP3DL3f5Wd/VNL8coeKa
        ldo8oJCaldo8oJCaldo8oJCaldo8oJCaldo8oJCaldo8oJA+Tz5suRPrjyic32jBjD6lNg8opE90ECFF
        GX1KbR5QSJ/oEEKKMvqU2jygkD7jP3t0ECGc33gJM/qU2jygkJqV2jygkJqV2jygkJqV2jygkJqV2jyg
        kD5D/h8wy/v+tFKbBxTSJzqYPEWZplFq84BC+kSHkqco0zRKbR5QSJ8h/w+Y5X1/WqnNAwqpWanNAwqp
        WanNAwqpWanNAwqpWanNAwrp0+4HZAwK6RMdREhRRp9SmwcU0ic6hJCijD6lNg8opE+7H5AxKKRmpTYP
        KKRmpTYPKKRmpTYPKKRmpTYPKKRPux+QMSikT3QweYoyTaPU5gGF9IkOJU9RJuTVNz/c0t3dvx7miB/g
        SB7cKDXavVJ9a1mOIRwovM//5X7A+Xsfh0/VjBug3Gy7M82tPTmGcKDwGqzJs2W+AeLHluQYwoHCa9AG
        CKwNEFgbILCzDlCtd1cqN7f7467L/N0TCq/BWQeIrusdd12m755QeA3+wwD5vnSh8Bq0AQJrAwTWBsjI
        4z7TqdzfcVc2D45cZwNk5CSf6Sw+eH/kOhsgIyc9kFmvk2M4xAZIaQME1gYIrP4BSL/EJ1H/AAP3Kh2e
        SfUD3Oi701Hgb+kCLKofIGb4bXr77kX0cvQ9XSS0hRiAmbwP0gZIYQMExgYIjA0QmOhAZrpFmPd1aqnV
        O8vRgfTGHUj027hXbry9Jj9+SN7XGYZhGEVlbu43s+1lT/1AvfIAAAAASUVORK5CYII=
</value>
  </data>
</root>