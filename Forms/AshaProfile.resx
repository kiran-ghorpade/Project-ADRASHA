<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGAAAABgCAYAAADimHc4AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EQAACxEBf2RfkQAAC8hJREFUeF7tnQt0FOUVx2l7rFq0PafFthTU2lACtBQ8RQ9yENoKAhaQV3hZkJf4
        gAQEwssARhBIAxLkUREIAmJsOJUCEohQQN4PKWIkQCwEQnYWyGbzMDN55/bezbfpMrlJdma/TXbT+Z/z
        O4bd2e/e+5/Z7/tm5tuxiSVLlixZsmTJkiVLliwFkuz2b3+abSvo5bCrEQ67tiZbUQ84FO0rh6JexX87
        8fXiSvBveg3fw23207b4erjDVvhsvpL/kGjOUl2y2eAHWbfU57MVbaUwuiLbroEvUBuVO0aLw7b7Z2TA
        /SKcJRIAfNdp07riUbsOj948zkS5qBr+N9FpV/th7O+JNP7/lJ4O9zkV9TU8Qq9VN6l+oG4Lc3iVchFp
        NX5RN4PdwQxE4UxpECgXRZtOuYk0G6foa49HXTprQmCQiYSJdBuPcuyFv8SBcLeu2MBF0XY6Fe1RkX5w
        K8umDqBpIltoIFM5IRgmygg+QRrci0fSymqFBRk0O6NaRFnBobzMvJ+g+Se5goIRHLeO52bk/liUF9jK
        ylJ/4TrxYQoJbtRUPF95RJQZmMqyFbVx2NUMvoDgh2qjGkW5gSVHhtoCE7zOJd7IyAy4GZKrz8evKJNs
        40RR0+hCoSi/YSVmO34dcNMv3oBDn+yCj1csh9Uzp8Ky8Jdg0YQREDWiP8wJ630XJ5IOsG3IBgfmEwEx
        O0LzV3MJ+sqtG044+I+dEDdtUjWTa2Ph2KFw85tbbJvSUbR3hQ0NIzwKhrCJ+QC2CYfxaKcjnDPYGz5Y
        /Bbbtj/AfAcLO+pX4vJCLpeUWTKuKPBe1CzWVKPMf2EAxEwaB2vnTIfd8Zvg0hepbExfwRO1nAYZlNH8
        XVxCZrl87jIsGj+cNVMWq2ZOgZQT59n4PqFoO4Ut9SO6vsMmYpLUsxfhrTFhrGmymTu0D2xfvQqybAVs
        LmahK73CHv+KrpnLnO9nXLbB2xNGsmb5k/cXzIHbN3LYnMyAY8G1erndicEi9cHNciczH1bNmsoaVB/Q
        YE2DPpebGbCt14VN/pGY89u44GZI2rqNNaY+2fPBZjY3Uyia3a/fArqHywY2QXrqDddMhTOlPoka3hfS
        zl9hczSFor4i7JIrWr1A/Rwb1ARbY5awhvjKytf+BGmJj8P26K7s+xw0VeVyNAN6dBW9+o6wTZ6y7IV/
        5AKa4fqlDNeRx5lhliVje8Lp9U9A+em2AGfaQPHxtrDilWfYbTm+PHKGzdUMeF7QXdgmT/jViueCmYGm
        gZwJZlgwshcciOvsMpyM9+RWUnvX+9zn9Lw3bzabqykUdYOwTY5oYJF11kszn+jRg1kTjDB3aC9IfPNp
        yD/4m2rGe3IuvhP7eT10fnA15Rqbs2EUNU/qYOxaLsgFMsHp5MOsAUbYOOMPoOz5HWs4h7fjAV2y4HI2
        g9Ne0FfY57tweiXt5vqWmMVs8d7gHmA5k2vD2/Fg2eQJbM5mwJPV5cI+3yXrHi+d/r85ehBbfG0sxgH2
        7MZOVQOsGbwdD+jeA5e7URx27bywzzfRnR+cWvm8SplIPZPCFl0TtQ2wZvBmPKB7EFzuRkHPyvNt+c2E
        jeZF6/O5AGZI3pbAFq3H2wHWDFw8T7bGLmVzN4PjVmEPYaN5YV8WwTVuho0L57NFexIf2R3sBgZYo3Ax
        PYmVOA5k2dVJwkbzwr5sDde4GZa8PIot2hO9YRfiQ+DtwS1cfLUppNr7euranovpCU1HpV0llXHLEue0
        +9nGDUL3eKk4rmhP9IaRkbN7NXdBf+vf11PX9lxMPXRziKvBOGqysNG8cAaUwjduDG8HYL1hdxk6xOAO
        YLbnYuo5lXyIrcEo6N0FYaN5ybr5cnT3PrZYPXrDqBshU8lMb7qgurbnYurZ9+FHbA1GoYuXwkbzwjEg
        m2vcKHs2b2GL1aM3TDZcTD20/oirwSjoXZaw0bzwG1DMNW6UxFXvssXq4UyTCRdTz4boKLYGo6B3RcJG
        85K1A+j2H1esHs40mXAx9dDqO64Go0jaAXK6oLWzp7HF6uFMkwkXUw8tfeRqMIqsLkjKIEwXurhi9XCm
        yYSLqYfWJ3E1GEXOICxpGrpkYt0nYQRnmky4mHoWjBrI1mAUKdNQWSdiC8d5t+qt/BRvnAyobS6mHlp1
        zdVgHBknYpIuRXh7GfrT2NaseTLYFdOajannjWHPsTUYRsalCBwDpFyMmzey+lp+jp7tQyA1IZQ10Beu
        JIbCs+1bsTH1yLozJuVinKzL0XRUccXq6RYaAoM6h8CdfbyRZri9N9TVJrXNxfRE5m1JKZej6Xk7Mm7I
        HN2Z5NVCLDLJvRMufez7N+Gb7aEQ1qVVVbtcTDdSzVfUcvrplrDRN8m6JZn2ZRosj3iJLd6N2yiCuozd
        f8Ux4TRvbq3gZ6jPpy7Ns00uJiHTfALHzn8L+3wXDiZxXBAz2NOzYfPSRawJhKdZbnL3PQAlxx7hjWag
        bXP3NWXb4mLKNp/AsXOZsM930ZOmuCC+QPde543oV80MzrTsT+9xkbP3flAPPuQyuPzUr/Eoxy4Kob/p
        NXqPtnFvz7Wlj+cP8wmnveDPwj7fJXNhlieXzn4NMa++eJchnGluQ43CteUZy1/mS1+YRcJGpS1N9MSe
        7oBNi6LrfQf4zXwED9b1wjZ5krk4Vw/OGGB/QqJrwS6ZNKZVW9j66BNwo3k3gJ/1APVvLVmDa0Nd29L1
        2evNu7vaehHbdO8Af5pPOBWtm7BNnsTy9KtcQFlcXLsNrnUY6DLOk4q1HSBv14Os0Ry0bcWaDtXaudZx
        ICRFL2ZjywI9+o9flqeTZP5Aw5Pc01ehZNCsaoZVEfEkVCS3Aeeee1nDPaFtKvbibCj8Sb4tpKTfNMg9
        IfFHGZ4o6svCLvmS/ROl7MwC0BZsBGjZhzWqii7dXdPLss9a1boT6L2yz8R9YPoM15YbjEmxKQc2NzMo
        muL3JzBikOlscIM4r9yBkr7TeHM4dvzWZWzp549BTtL/pppu6LXSI7+qNP+T9nwbDPRtoFy4HI3isKlT
        hU3+k+tnqj4++TDnQgaUPTWONaRGxneuNBepONUa1H81Q9Pvc6EebAYVJz2uotK2XBs1UNZlHOZ0k83V
        W2h89OsP9DyVrRT04ZLwBufl21DWeSxrRK08/AzAXi/WitI2LXFbro1aoAPCl2+C1N8DeCOc6xp/VMHN
        b6G09xTWAK/o2RXgVC0rpem93k/zn/WC0uemmh0Tdghb6k/0gAqHXcthkqkRbf4GtnBDTMTuhbs4R69N
        MNb1cLgGZib3mkAPnA32LDnxJFyvLlXnnkzDrqE3W7RheuBRvg7n+Z/jEU+s61j5GretUVr0gtzj3q0N
        pdqRQcKOhhHdduOS01MyZDZfcABSPGwuWwPDCmFDw4nODfAoOM4kVwUdUVyhgUzu0dq/BQ67egy+hu8L
        GxpWTqfzR7QEg0uUKApfzhYZyBROjWNrqUS9GHAPcq3xsZU2FcrbDmaLDGTK2w2hywp311JJZsA+wJV7
        cGvewRS2wGAg9/Ddjzmj2rIyi0JFuYEp8ejiqu5IjU1giwsG1OV/99gBamp2pvawKDOwRf0jDswnKPFg
        7P/dFEa84z7yjwXNw7vdAoB7cCcsLXl+BltcMFAyIJJOtNYFzGzHjLSlW2aUdRpVxhUYyJR1HFGuRW+a
        L8oIbuUnHmlXPDzqOvy8J1tsQIE5Fo+Yl56fcLitSL/xSI358PWS7hOL2MIDgNIu44u0qPcjRbqNU7cP
        3X6gMHxFQlnHkaWcCQ1B2eMjS3HA/ciebG8q0mz8gtjkpkURcZtKO48p5kypD0qfGlOshb8TD+u+aNz/
        /7C6pE1ZMRpnSynlIf0qOKNkUh7Sv6I4bHaaumD9ZL+tXghWOVYm/VCbueaNkmFzzpX9/i+F0FzCoI1t
        UFslYXPOFUWunpsV888HRThLdakwNvExbfrqyOIX5u8oGjwzpbTn5Cwys7xdWCkdyXTtnqC/6TWX0bgN
        bev6zLRVM6gN0ZwlS5YsWbJkyZIlS5YsBYCaNPkvOY5w8c6+vdkAAAAASUVORK5CYII=
</value>
  </data>
</root>