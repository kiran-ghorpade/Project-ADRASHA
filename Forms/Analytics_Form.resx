<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
</root>