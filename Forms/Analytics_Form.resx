<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>