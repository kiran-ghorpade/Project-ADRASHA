<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>